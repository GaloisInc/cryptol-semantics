Require Import List.
Import ListNotations.
Require Import String.

(* Borrow from CompCert *)
Require Import Cryptol.Coqlib.
Require Import Cryptol.Bitvectors.

Require Import Cryptol.AST.
Require Import Cryptol.Semantics.
Require Import Cryptol.Utils.
Require Import Cryptol.Builtins.
Require Import Cryptol.BuiltinSem.
Require Import Cryptol.Values.        

Require Import Cryptol.EvalTac.

Import HaskellListNotations.
Open Scope string.


Definition whole_prog := [(NonRecursive (Decl (0,"demote") DPrim)),(NonRecursive (Decl (1,"+") DPrim)),(NonRecursive (Decl (2,"-") DPrim)),(NonRecursive (Decl (3,"*") DPrim)),(NonRecursive (Decl (4,"/") DPrim)),(NonRecursive (Decl (5,"%") DPrim)),(NonRecursive (Decl (6,"^^") DPrim)),(NonRecursive (Decl (7,"lg2") DPrim)),(NonRecursive (Decl (9,"True") DPrim)),(NonRecursive (Decl (10,"False") DPrim)),(NonRecursive (Decl (11,"negate") DPrim)),(NonRecursive (Decl (12,"complement") DPrim)),(NonRecursive (Decl (13,"<") DPrim)),(NonRecursive (Decl (14,">") DPrim)),(NonRecursive (Decl (15,"<=") DPrim)),(NonRecursive (Decl (16,">=") DPrim)),(NonRecursive (Decl (17,"==") DPrim)),(NonRecursive (Decl (18,"!=") DPrim)),(NonRecursive (Decl (19,"===") (DExpr (ETAbs (30,"a") (ETAbs (31,"b") (EAbs (89,"f") (EAbs (90,"g") (EAbs (91,"x") (EApp (EApp (ETApp (EVar (17,"==")) (ETyp (TVar (TVBound 31 KType)))) (EApp (EVar (89,"f")) (EVar (91,"x")))) (EApp (EVar (90,"g")) (EVar (91,"x")))))))))))),(NonRecursive (Decl (20,"!==") (DExpr (ETAbs (40,"a") (ETAbs (41,"b") (EAbs (94,"f") (EAbs (95,"g") (EAbs (96,"x") (EApp (EApp (ETApp (EVar (18,"!=")) (ETyp (TVar (TVBound 41 KType)))) (EApp (EVar (94,"f")) (EVar (96,"x")))) (EApp (EVar (95,"g")) (EVar (96,"x")))))))))))),(NonRecursive (Decl (21,"min") (DExpr (ETAbs (50,"a") (EAbs (98,"x") (EAbs (99,"y") (EIf (EApp (EApp (ETApp (EVar (13,"<")) (ETyp (TVar (TVBound 50 KType)))) (EVar (98,"x"))) (EVar (99,"y"))) (EVar (98,"x")) (EVar (99,"y"))))))))),(NonRecursive (Decl (22,"max") (DExpr (ETAbs (56,"a") (EAbs (101,"x") (EAbs (102,"y") (EIf (EApp (EApp (ETApp (EVar (14,">")) (ETyp (TVar (TVBound 56 KType)))) (EVar (101,"x"))) (EVar (102,"y"))) (EVar (101,"x")) (EVar (102,"y"))))))))),(NonRecursive (Decl (23,"/\\") (DExpr (EAbs (103,"x") (EAbs (104,"y") (EIf (EVar (103,"x")) (EVar (104,"y")) (EVar (10,"False")))))))),(NonRecursive (Decl (24,"\\/") (DExpr (EAbs (105,"x") (EAbs (106,"y") (EIf (EVar (105,"x")) (EVar (9,"True")) (EVar (106,"y")))))))),(NonRecursive (Decl (25,"==>") (DExpr (EAbs (107,"a") (EAbs (108,"b") (EIf (EVar (107,"a")) (EVar (108,"b")) (EVar (9,"True")))))))),(NonRecursive (Decl (26,"&&") DPrim)),(NonRecursive (Decl (27,"||") DPrim)),(NonRecursive (Decl (28,"^") DPrim)),(NonRecursive (Decl (29,"zero") DPrim)),(NonRecursive (Decl (30,"<<") DPrim)),(NonRecursive (Decl (31,">>") DPrim)),(NonRecursive (Decl (32,"<<<") DPrim)),(NonRecursive (Decl (33,">>>") DPrim)),(NonRecursive (Decl (34,"#") DPrim)),(NonRecursive (Decl (35,"splitAt") DPrim)),(NonRecursive (Decl (36,"join") DPrim)),(NonRecursive (Decl (37,"split") DPrim)),(NonRecursive (Decl (38,"reverse") DPrim)),(NonRecursive (Decl (39,"transpose") DPrim)),(NonRecursive (Decl (40,"@") DPrim)),(NonRecursive (Decl (41,"@@") DPrim)),(NonRecursive (Decl (42,"!") DPrim)),(NonRecursive (Decl (43,"!!") DPrim)),(NonRecursive (Decl (44,"update") DPrim)),(NonRecursive (Decl (45,"updateEnd") DPrim)),(NonRecursive (Decl (46,"updates") (DExpr (ETAbs (121,"a") (ETAbs (122,"b") (ETAbs (123,"c") (ETAbs (124,"d") (EAbs (166,"xs0") (EAbs (167,"idxs") (EAbs (168,"vals") (EWhere (EApp (EApp (ETApp (ETApp (ETApp (EVar (42,"!")) (ETyp (TCon (TF TCAdd) [TCon (TC (TCNum 1)) [],TVar (TVBound 124 KNum)]))) (ETyp (TCon (TC TCSeq) [TVar (TVBound 121 KNum),TVar (TVBound 122 KType)]))) (ETyp (TCon (TC (TCNum 0)) []))) (EVar (169,"xss"))) (ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 0)) []))) (ETyp (TCon (TC (TCNum 0)) [])))) [(Recursive [(Decl (169,"xss") (DExpr (EApp (EApp (ETApp (ETApp (ETApp (EVar (34,"#")) (ETyp (TCon (TC (TCNum 1)) []))) (ETyp (TVar (TVBound 124 KNum)))) (ETyp (TCon (TC TCSeq) [TVar (TVBound 121 KNum),TVar (TVBound 122 KType)]))) (EList [(EVar (166,"xs0"))])) (EComp (EApp (EApp (EApp (ETApp (ETApp (ETApp (EVar (44,"update")) (ETyp (TVar (TVBound 121 KNum)))) (ETyp (TVar (TVBound 122 KType)))) (ETyp (TVar (TVBound 123 KNum)))) (EVar (170,"xs"))) (EVar (171,"i"))) (EVar (172,"b"))) [[(From (170,"xs") (EVar (169,"xss")))],[(From (171,"i") (EVar (167,"idxs")))],[(From (172,"b") (EVar (168,"vals")))]]))))])]))))))))))),(NonRecursive (Decl (47,"updatesEnd") (DExpr (ETAbs (156,"a") (ETAbs (157,"b") (ETAbs (158,"c") (ETAbs (159,"d") (EAbs (177,"xs0") (EAbs (178,"idxs") (EAbs (179,"vals") (EWhere (EApp (EApp (ETApp (ETApp (ETApp (EVar (42,"!")) (ETyp (TCon (TF TCAdd) [TCon (TC (TCNum 1)) [],TVar (TVBound 159 KNum)]))) (ETyp (TCon (TC TCSeq) [TVar (TVBound 156 KNum),TVar (TVBound 157 KType)]))) (ETyp (TCon (TC (TCNum 0)) []))) (EVar (180,"xss"))) (ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 0)) []))) (ETyp (TCon (TC (TCNum 0)) [])))) [(Recursive [(Decl (180,"xss") (DExpr (EApp (EApp (ETApp (ETApp (ETApp (EVar (34,"#")) (ETyp (TCon (TC (TCNum 1)) []))) (ETyp (TVar (TVBound 159 KNum)))) (ETyp (TCon (TC TCSeq) [TVar (TVBound 156 KNum),TVar (TVBound 157 KType)]))) (EList [(EVar (177,"xs0"))])) (EComp (EApp (EApp (EApp (ETApp (ETApp (ETApp (EVar (45,"updateEnd")) (ETyp (TVar (TVBound 156 KNum)))) (ETyp (TVar (TVBound 157 KType)))) (ETyp (TVar (TVBound 158 KNum)))) (EVar (181,"xs"))) (EVar (182,"i"))) (EVar (183,"b"))) [[(From (181,"xs") (EVar (180,"xss")))],[(From (182,"i") (EVar (178,"idxs")))],[(From (183,"b") (EVar (179,"vals")))]]))))])]))))))))))),(NonRecursive (Decl (48,"fromThen") DPrim)),(NonRecursive (Decl (49,"fromTo") DPrim)),(NonRecursive (Decl (50,"fromThenTo") DPrim)),(NonRecursive (Decl (51,"infFrom") DPrim)),(NonRecursive (Decl (52,"infFromThen") DPrim)),(NonRecursive (Decl (53,"error") DPrim)),(NonRecursive (Decl (54,"pmult") DPrim)),(NonRecursive (Decl (55,"pdiv") DPrim)),(NonRecursive (Decl (56,"pmod") DPrim)),(NonRecursive (Decl (57,"random") DPrim)),(NonRecursive (Decl (61,"take") (DExpr (ETAbs (214,"front") (ETAbs (215,"back") (ETAbs (216,"elem") (EAbs (212,"__p1") (EWhere (EVar (214,"x")) [(NonRecursive (Decl (213,"__p2") (DExpr (EApp (ETApp (ETApp (ETApp (EVar (35,"splitAt")) (ETyp (TVar (TVBound 214 KNum)))) (ETyp (TVar (TVBound 215 KNum)))) (ETyp (TVar (TVBound 216 KType)))) (EVar (212,"__p1")))))),(NonRecursive (Decl (214,"x") (DExpr (ESel (EVar (213,"__p2")) (TupleSel 0))))),(NonRecursive (Decl (215,"__p0") (DExpr (ESel (EVar (213,"__p2")) (TupleSel 1)))))])))))))),(NonRecursive (Decl (62,"drop") (DExpr (ETAbs (231,"front") (ETAbs (232,"back") (ETAbs (233,"elem") (EAbs (219,"__p4") (EWhere (EVar (222,"y")) [(NonRecursive (Decl (220,"__p5") (DExpr (EApp (ETApp (ETApp (ETApp (EVar (35,"splitAt")) (ETyp (TVar (TVBound 231 KNum)))) (ETyp (TVar (TVBound 232 KNum)))) (ETyp (TVar (TVBound 233 KType)))) (EVar (219,"__p4")))))),(NonRecursive (Decl (221,"__p3") (DExpr (ESel (EVar (220,"__p5")) (TupleSel 0))))),(NonRecursive (Decl (222,"y") (DExpr (ESel (EVar (220,"__p5")) (TupleSel 1)))))])))))))),(NonRecursive (Decl (63,"tail") (DExpr (ETAbs (249,"a") (ETAbs (250,"b") (EAbs (225,"xs") (EApp (ETApp (ETApp (ETApp (EVar (62,"drop")) (ETyp (TCon (TC (TCNum 1)) []))) (ETyp (TVar (TVBound 249 KNum)))) (ETyp (TVar (TVBound 250 KType)))) (EVar (225,"xs"))))))))),(NonRecursive (Decl (64,"width") (DExpr (ETAbs (255,"bits") (ETAbs (256,"len") (ETAbs (257,"elem") (EAbs (229,"__p6") (ETApp (ETApp (EVar (0,"demote")) (ETyp (TVar (TVBound 256 KNum)))) (ETyp (TVar (TVBound 255 KNum))))))))))),(NonRecursive (Decl (65,"undefined") (DExpr (ETAbs (260,"a") (EApp (ETApp (ETApp (EVar (53,"error")) (ETyp (TVar (TVBound 260 KType)))) (ETyp (TCon (TC (TCNum 9)) []))) (EList [(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 117)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 110)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 100)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 101)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 102)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 105)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 110)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 101)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 100)) []))) (ETyp (TCon (TC (TCNum 8)) [])))])))))),(NonRecursive (Decl (66,"groupBy") (DExpr (ETAbs (265,"each") (ETAbs (266,"parts") (ETAbs (267,"elem") (ETApp (ETApp (ETApp (EVar (37,"split")) (ETyp (TVar (TVBound 266 KNum)))) (ETyp (TVar (TVBound 265 KNum)))) (ETyp (TVar (TVBound 267 KType)))))))))),(NonRecursive (Decl (68,"trace") DPrim)),(NonRecursive (Decl (69,"traceVal") (DExpr (ETAbs (273,"n") (ETAbs (274,"a") (EAbs (240,"msg") (EAbs (241,"x") (EApp (EApp (EApp (ETApp (ETApp (ETApp (EVar (68,"trace")) (ETyp (TVar (TVBound 273 KNum)))) (ETyp (TVar (TVBound 274 KType)))) (ETyp (TVar (TVBound 274 KType)))) (EVar (240,"msg"))) (EVar (241,"x"))) (EVar (241,"x")))))))))),(NonRecursive (Decl (242,"Ch") (DExpr (EAbs (268,"x") (EAbs (269,"y") (EAbs (270,"z") (EApp (EApp (ETApp (EVar (28,"^")) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (EApp (EApp (ETApp (EVar (26,"&&")) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (EVar (268,"x"))) (EVar (269,"y")))) (EApp (EApp (ETApp (EVar (26,"&&")) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (EApp (ETApp (EVar (12,"complement")) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (EVar (268,"x")))) (EVar (270,"z")))))))))),(NonRecursive (Decl (243,"Maj") (DExpr (EAbs (271,"x") (EAbs (272,"y") (EAbs (273,"z") (EApp (EApp (ETApp (EVar (28,"^")) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (EApp (EApp (ETApp (EVar (28,"^")) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (EApp (EApp (ETApp (EVar (26,"&&")) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (EVar (271,"x"))) (EVar (272,"y")))) (EApp (EApp (ETApp (EVar (26,"&&")) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (EVar (271,"x"))) (EVar (273,"z"))))) (EApp (EApp (ETApp (EVar (26,"&&")) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (EVar (272,"y"))) (EVar (273,"z")))))))))),(NonRecursive (Decl (244,"S0") (DExpr (EAbs (274,"x") (EApp (EApp (ETApp (EVar (28,"^")) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (EApp (EApp (ETApp (EVar (28,"^")) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (EApp (EApp (ETApp (ETApp (ETApp (EVar (33,">>>")) (ETyp (TCon (TC (TCNum 32)) []))) (ETyp (TCon (TC (TCNum 2)) []))) (ETyp (TCon (TC TCBit) []))) (EVar (274,"x"))) (ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 2)) []))) (ETyp (TCon (TC (TCNum 2)) []))))) (EApp (EApp (ETApp (ETApp (ETApp (EVar (33,">>>")) (ETyp (TCon (TC (TCNum 32)) []))) (ETyp (TCon (TC (TCNum 4)) []))) (ETyp (TCon (TC TCBit) []))) (EVar (274,"x"))) (ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 13)) []))) (ETyp (TCon (TC (TCNum 4)) [])))))) (EApp (EApp (ETApp (ETApp (ETApp (EVar (33,">>>")) (ETyp (TCon (TC (TCNum 32)) []))) (ETyp (TCon (TC (TCNum 5)) []))) (ETyp (TCon (TC TCBit) []))) (EVar (274,"x"))) (ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 22)) []))) (ETyp (TCon (TC (TCNum 5)) []))))))))),(NonRecursive (Decl (245,"S1") (DExpr (EAbs (275,"x") (EApp (EApp (ETApp (EVar (28,"^")) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (EApp (EApp (ETApp (EVar (28,"^")) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (EApp (EApp (ETApp (ETApp (ETApp (EVar (33,">>>")) (ETyp (TCon (TC (TCNum 32)) []))) (ETyp (TCon (TC (TCNum 3)) []))) (ETyp (TCon (TC TCBit) []))) (EVar (275,"x"))) (ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 6)) []))) (ETyp (TCon (TC (TCNum 3)) []))))) (EApp (EApp (ETApp (ETApp (ETApp (EVar (33,">>>")) (ETyp (TCon (TC (TCNum 32)) []))) (ETyp (TCon (TC (TCNum 4)) []))) (ETyp (TCon (TC TCBit) []))) (EVar (275,"x"))) (ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 11)) []))) (ETyp (TCon (TC (TCNum 4)) [])))))) (EApp (EApp (ETApp (ETApp (ETApp (EVar (33,">>>")) (ETyp (TCon (TC (TCNum 32)) []))) (ETyp (TCon (TC (TCNum 5)) []))) (ETyp (TCon (TC TCBit) []))) (EVar (275,"x"))) (ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 25)) []))) (ETyp (TCon (TC (TCNum 5)) []))))))))),(NonRecursive (Decl (246,"s0") (DExpr (EAbs (276,"x") (EApp (EApp (ETApp (EVar (28,"^")) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (EApp (EApp (ETApp (EVar (28,"^")) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (EApp (EApp (ETApp (ETApp (ETApp (EVar (33,">>>")) (ETyp (TCon (TC (TCNum 32)) []))) (ETyp (TCon (TC (TCNum 3)) []))) (ETyp (TCon (TC TCBit) []))) (EVar (276,"x"))) (ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 7)) []))) (ETyp (TCon (TC (TCNum 3)) []))))) (EApp (EApp (ETApp (ETApp (ETApp (EVar (33,">>>")) (ETyp (TCon (TC (TCNum 32)) []))) (ETyp (TCon (TC (TCNum 5)) []))) (ETyp (TCon (TC TCBit) []))) (EVar (276,"x"))) (ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 18)) []))) (ETyp (TCon (TC (TCNum 5)) [])))))) (EApp (EApp (ETApp (ETApp (ETApp (EVar (31,">>")) (ETyp (TCon (TC (TCNum 32)) []))) (ETyp (TCon (TC (TCNum 2)) []))) (ETyp (TCon (TC TCBit) []))) (EVar (276,"x"))) (ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 3)) []))) (ETyp (TCon (TC (TCNum 2)) []))))))))),(NonRecursive (Decl (247,"s1") (DExpr (EAbs (277,"x") (EApp (EApp (ETApp (EVar (28,"^")) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (EApp (EApp (ETApp (EVar (28,"^")) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (EApp (EApp (ETApp (ETApp (ETApp (EVar (33,">>>")) (ETyp (TCon (TC (TCNum 32)) []))) (ETyp (TCon (TC (TCNum 5)) []))) (ETyp (TCon (TC TCBit) []))) (EVar (277,"x"))) (ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 17)) []))) (ETyp (TCon (TC (TCNum 5)) []))))) (EApp (EApp (ETApp (ETApp (ETApp (EVar (33,">>>")) (ETyp (TCon (TC (TCNum 32)) []))) (ETyp (TCon (TC (TCNum 5)) []))) (ETyp (TCon (TC TCBit) []))) (EVar (277,"x"))) (ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 19)) []))) (ETyp (TCon (TC (TCNum 5)) [])))))) (EApp (EApp (ETApp (ETApp (ETApp (EVar (31,">>")) (ETyp (TCon (TC (TCNum 32)) []))) (ETyp (TCon (TC (TCNum 4)) []))) (ETyp (TCon (TC TCBit) []))) (EVar (277,"x"))) (ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 10)) []))) (ETyp (TCon (TC (TCNum 4)) []))))))))),(NonRecursive (Decl (248,"K") (DExpr (EList [(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 1116352408)) []))) (ETyp (TCon (TC (TCNum 32)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 1899447441)) []))) (ETyp (TCon (TC (TCNum 32)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 3049323471)) []))) (ETyp (TCon (TC (TCNum 32)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 3921009573)) []))) (ETyp (TCon (TC (TCNum 32)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 961987163)) []))) (ETyp (TCon (TC (TCNum 32)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 1508970993)) []))) (ETyp (TCon (TC (TCNum 32)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 2453635748)) []))) (ETyp (TCon (TC (TCNum 32)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 2870763221)) []))) (ETyp (TCon (TC (TCNum 32)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 3624381080)) []))) (ETyp (TCon (TC (TCNum 32)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 310598401)) []))) (ETyp (TCon (TC (TCNum 32)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 607225278)) []))) (ETyp (TCon (TC (TCNum 32)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 1426881987)) []))) (ETyp (TCon (TC (TCNum 32)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 1925078388)) []))) (ETyp (TCon (TC (TCNum 32)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 2162078206)) []))) (ETyp (TCon (TC (TCNum 32)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 2614888103)) []))) (ETyp (TCon (TC (TCNum 32)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 3248222580)) []))) (ETyp (TCon (TC (TCNum 32)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 3835390401)) []))) (ETyp (TCon (TC (TCNum 32)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 4022224774)) []))) (ETyp (TCon (TC (TCNum 32)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 264347078)) []))) (ETyp (TCon (TC (TCNum 32)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 604807628)) []))) (ETyp (TCon (TC (TCNum 32)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 770255983)) []))) (ETyp (TCon (TC (TCNum 32)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 1249150122)) []))) (ETyp (TCon (TC (TCNum 32)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 1555081692)) []))) (ETyp (TCon (TC (TCNum 32)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 1996064986)) []))) (ETyp (TCon (TC (TCNum 32)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 2554220882)) []))) (ETyp (TCon (TC (TCNum 32)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 2821834349)) []))) (ETyp (TCon (TC (TCNum 32)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 2952996808)) []))) (ETyp (TCon (TC (TCNum 32)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 3210313671)) []))) (ETyp (TCon (TC (TCNum 32)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 3336571891)) []))) (ETyp (TCon (TC (TCNum 32)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 3584528711)) []))) (ETyp (TCon (TC (TCNum 32)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 113926993)) []))) (ETyp (TCon (TC (TCNum 32)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 338241895)) []))) (ETyp (TCon (TC (TCNum 32)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 666307205)) []))) (ETyp (TCon (TC (TCNum 32)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 773529912)) []))) (ETyp (TCon (TC (TCNum 32)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 1294757372)) []))) (ETyp (TCon (TC (TCNum 32)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 1396182291)) []))) (ETyp (TCon (TC (TCNum 32)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 1695183700)) []))) (ETyp (TCon (TC (TCNum 32)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 1986661051)) []))) (ETyp (TCon (TC (TCNum 32)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 2177026350)) []))) (ETyp (TCon (TC (TCNum 32)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 2456956037)) []))) (ETyp (TCon (TC (TCNum 32)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 2730485921)) []))) (ETyp (TCon (TC (TCNum 32)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 2820302411)) []))) (ETyp (TCon (TC (TCNum 32)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 3259730800)) []))) (ETyp (TCon (TC (TCNum 32)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 3345764771)) []))) (ETyp (TCon (TC (TCNum 32)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 3516065817)) []))) (ETyp (TCon (TC (TCNum 32)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 3600352804)) []))) (ETyp (TCon (TC (TCNum 32)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 4094571909)) []))) (ETyp (TCon (TC (TCNum 32)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 275423344)) []))) (ETyp (TCon (TC (TCNum 32)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 430227734)) []))) (ETyp (TCon (TC (TCNum 32)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 506948616)) []))) (ETyp (TCon (TC (TCNum 32)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 659060556)) []))) (ETyp (TCon (TC (TCNum 32)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 883997877)) []))) (ETyp (TCon (TC (TCNum 32)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 958139571)) []))) (ETyp (TCon (TC (TCNum 32)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 1322822218)) []))) (ETyp (TCon (TC (TCNum 32)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 1537002063)) []))) (ETyp (TCon (TC (TCNum 32)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 1747873779)) []))) (ETyp (TCon (TC (TCNum 32)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 1955562222)) []))) (ETyp (TCon (TC (TCNum 32)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 2024104815)) []))) (ETyp (TCon (TC (TCNum 32)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 2227730452)) []))) (ETyp (TCon (TC (TCNum 32)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 2361852424)) []))) (ETyp (TCon (TC (TCNum 32)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 2428436474)) []))) (ETyp (TCon (TC (TCNum 32)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 2756734187)) []))) (ETyp (TCon (TC (TCNum 32)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 3204031479)) []))) (ETyp (TCon (TC (TCNum 32)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 3329325298)) []))) (ETyp (TCon (TC (TCNum 32)) [])))])))),(NonRecursive (Decl (249,"preprocess") (DExpr (ETAbs (403,"msgLen") (ETAbs (404,"contentLen") (ETAbs (405,"chunks") (ETAbs (406,"padding") (EAbs (282,"msg") (EApp (ETApp (ETApp (ETApp (EVar (37,"split")) (ETyp (TVar (TVBound 405 KNum)))) (ETyp (TCon (TC (TCNum 512)) []))) (ETyp (TCon (TC TCBit) []))) (EApp (EApp (ETApp (ETApp (ETApp (EVar (34,"#")) (ETyp (TVar (TVBound 403 KNum)))) (ETyp (TCon (TF TCAdd) [TCon (TC (TCNum 65)) [],TVar (TVBound 406 KNum)]))) (ETyp (TCon (TC TCBit) []))) (EVar (282,"msg"))) (EApp (EApp (ETApp (ETApp (ETApp (EVar (34,"#")) (ETyp (TCon (TC (TCNum 1)) []))) (ETyp (TCon (TF TCAdd) [TCon (TC (TCNum 64)) [],TVar (TVBound 406 KNum)]))) (ETyp (TCon (TC TCBit) []))) (EList [(EVar (9,"True"))])) (EApp (EApp (ETApp (ETApp (ETApp (EVar (34,"#")) (ETyp (TVar (TVBound 406 KNum)))) (ETyp (TCon (TC (TCNum 64)) []))) (ETyp (TCon (TC TCBit) []))) (ETApp (EVar (29,"zero")) (ETyp (TCon (TC TCSeq) [TVar (TVBound 406 KNum),TCon (TC TCBit) []])))) (ETApp (ETApp (EVar (0,"demote")) (ETyp (TVar (TVBound 403 KNum)))) (ETyp (TCon (TC (TCNum 64)) []))))))))))))))),(NonRecursive (Decl (250,"H0") (DExpr (EList [(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 1779033703)) []))) (ETyp (TCon (TC (TCNum 32)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 3144134277)) []))) (ETyp (TCon (TC (TCNum 32)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 1013904242)) []))) (ETyp (TCon (TC (TCNum 32)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 2773480762)) []))) (ETyp (TCon (TC (TCNum 32)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 1359893119)) []))) (ETyp (TCon (TC (TCNum 32)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 2600822924)) []))) (ETyp (TCon (TC (TCNum 32)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 528734635)) []))) (ETyp (TCon (TC (TCNum 32)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 1541459225)) []))) (ETyp (TCon (TC (TCNum 32)) [])))])))),(NonRecursive (Decl (251,"SHA256MessageSchedule") (DExpr (EAbs (283,"M") (EWhere (EVar (284,"W")) [(Recursive [(Decl (284,"W") (DExpr (EApp (EApp (ETApp (ETApp (ETApp (EVar (34,"#")) (ETyp (TCon (TC (TCNum 16)) []))) (ETyp (TCon (TC (TCNum 48)) []))) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (EVar (283,"M"))) (EComp (EApp (EApp (ETApp (EVar (1,"+")) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (EApp (EApp (ETApp (EVar (1,"+")) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (EApp (EApp (ETApp (EVar (1,"+")) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (EApp (EVar (247,"s1")) (EApp (EApp (ETApp (ETApp (ETApp (EVar (40,"@")) (ETyp (TCon (TC (TCNum 64)) []))) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (ETyp (TCon (TC (TCNum 8)) []))) (EVar (284,"W"))) (EApp (EApp (ETApp (EVar (2,"-")) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 8)) [],TCon (TC TCBit) []]))) (EVar (285,"j"))) (ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 2)) []))) (ETyp (TCon (TC (TCNum 8)) []))))))) (EApp (EApp (ETApp (ETApp (ETApp (EVar (40,"@")) (ETyp (TCon (TC (TCNum 64)) []))) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (ETyp (TCon (TC (TCNum 8)) []))) (EVar (284,"W"))) (EApp (EApp (ETApp (EVar (2,"-")) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 8)) [],TCon (TC TCBit) []]))) (EVar (285,"j"))) (ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 7)) []))) (ETyp (TCon (TC (TCNum 8)) []))))))) (EApp (EVar (246,"s0")) (EApp (EApp (ETApp (ETApp (ETApp (EVar (40,"@")) (ETyp (TCon (TC (TCNum 64)) []))) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (ETyp (TCon (TC (TCNum 8)) []))) (EVar (284,"W"))) (EApp (EApp (ETApp (EVar (2,"-")) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 8)) [],TCon (TC TCBit) []]))) (EVar (285,"j"))) (ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 15)) []))) (ETyp (TCon (TC (TCNum 8)) [])))))))) (EApp (EApp (ETApp (ETApp (ETApp (EVar (40,"@")) (ETyp (TCon (TC (TCNum 64)) []))) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (ETyp (TCon (TC (TCNum 8)) []))) (EVar (284,"W"))) (EApp (EApp (ETApp (EVar (2,"-")) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 8)) [],TCon (TC TCBit) []]))) (EVar (285,"j"))) (ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 16)) []))) (ETyp (TCon (TC (TCNum 8)) [])))))) [[(From (285,"j") (ETApp (ETApp (ETApp (EVar (49,"fromTo")) (ETyp (TCon (TC (TCNum 16)) []))) (ETyp (TCon (TC (TCNum 63)) []))) (ETyp (TCon (TC (TCNum 8)) []))))]]))))])]))))),(NonRecursive (Decl (252,"SHA256Compress") (DExpr (EAbs (286,"H") (EAbs (287,"W") (EWhere (EList [(EApp (EApp (ETApp (EVar (1,"+")) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (EApp (EApp (ETApp (ETApp (ETApp (EVar (42,"!")) (ETyp (TCon (TC (TCNum 65)) []))) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (ETyp (TCon (TC (TCNum 0)) []))) (EVar (297,"as"))) (ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 0)) []))) (ETyp (TCon (TC (TCNum 0)) []))))) (EApp (EApp (ETApp (ETApp (ETApp (EVar (40,"@")) (ETyp (TCon (TC (TCNum 8)) []))) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (ETyp (TCon (TC (TCNum 0)) []))) (EVar (286,"H"))) (ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 0)) []))) (ETyp (TCon (TC (TCNum 0)) []))))),(EApp (EApp (ETApp (EVar (1,"+")) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (EApp (EApp (ETApp (ETApp (ETApp (EVar (42,"!")) (ETyp (TCon (TC (TCNum 65)) []))) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (ETyp (TCon (TC (TCNum 0)) []))) (EVar (296,"bs"))) (ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 0)) []))) (ETyp (TCon (TC (TCNum 0)) []))))) (EApp (EApp (ETApp (ETApp (ETApp (EVar (40,"@")) (ETyp (TCon (TC (TCNum 8)) []))) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (ETyp (TCon (TC (TCNum 1)) []))) (EVar (286,"H"))) (ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 1)) []))) (ETyp (TCon (TC (TCNum 1)) []))))),(EApp (EApp (ETApp (EVar (1,"+")) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (EApp (EApp (ETApp (ETApp (ETApp (EVar (42,"!")) (ETyp (TCon (TC (TCNum 65)) []))) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (ETyp (TCon (TC (TCNum 0)) []))) (EVar (295,"cs"))) (ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 0)) []))) (ETyp (TCon (TC (TCNum 0)) []))))) (EApp (EApp (ETApp (ETApp (ETApp (EVar (40,"@")) (ETyp (TCon (TC (TCNum 8)) []))) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (ETyp (TCon (TC (TCNum 2)) []))) (EVar (286,"H"))) (ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 2)) []))) (ETyp (TCon (TC (TCNum 2)) []))))),(EApp (EApp (ETApp (EVar (1,"+")) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (EApp (EApp (ETApp (ETApp (ETApp (EVar (42,"!")) (ETyp (TCon (TC (TCNum 65)) []))) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (ETyp (TCon (TC (TCNum 0)) []))) (EVar (294,"ds"))) (ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 0)) []))) (ETyp (TCon (TC (TCNum 0)) []))))) (EApp (EApp (ETApp (ETApp (ETApp (EVar (40,"@")) (ETyp (TCon (TC (TCNum 8)) []))) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (ETyp (TCon (TC (TCNum 2)) []))) (EVar (286,"H"))) (ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 3)) []))) (ETyp (TCon (TC (TCNum 2)) []))))),(EApp (EApp (ETApp (EVar (1,"+")) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (EApp (EApp (ETApp (ETApp (ETApp (EVar (42,"!")) (ETyp (TCon (TC (TCNum 65)) []))) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (ETyp (TCon (TC (TCNum 0)) []))) (EVar (293,"es"))) (ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 0)) []))) (ETyp (TCon (TC (TCNum 0)) []))))) (EApp (EApp (ETApp (ETApp (ETApp (EVar (40,"@")) (ETyp (TCon (TC (TCNum 8)) []))) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (ETyp (TCon (TC (TCNum 3)) []))) (EVar (286,"H"))) (ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 4)) []))) (ETyp (TCon (TC (TCNum 3)) []))))),(EApp (EApp (ETApp (EVar (1,"+")) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (EApp (EApp (ETApp (ETApp (ETApp (EVar (42,"!")) (ETyp (TCon (TC (TCNum 65)) []))) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (ETyp (TCon (TC (TCNum 0)) []))) (EVar (292,"fs"))) (ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 0)) []))) (ETyp (TCon (TC (TCNum 0)) []))))) (EApp (EApp (ETApp (ETApp (ETApp (EVar (40,"@")) (ETyp (TCon (TC (TCNum 8)) []))) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (ETyp (TCon (TC (TCNum 3)) []))) (EVar (286,"H"))) (ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 5)) []))) (ETyp (TCon (TC (TCNum 3)) []))))),(EApp (EApp (ETApp (EVar (1,"+")) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (EApp (EApp (ETApp (ETApp (ETApp (EVar (42,"!")) (ETyp (TCon (TC (TCNum 65)) []))) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (ETyp (TCon (TC (TCNum 0)) []))) (EVar (291,"gs"))) (ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 0)) []))) (ETyp (TCon (TC (TCNum 0)) []))))) (EApp (EApp (ETApp (ETApp (ETApp (EVar (40,"@")) (ETyp (TCon (TC (TCNum 8)) []))) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (ETyp (TCon (TC (TCNum 3)) []))) (EVar (286,"H"))) (ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 6)) []))) (ETyp (TCon (TC (TCNum 3)) []))))),(EApp (EApp (ETApp (EVar (1,"+")) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (EApp (EApp (ETApp (ETApp (ETApp (EVar (42,"!")) (ETyp (TCon (TC (TCNum 65)) []))) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (ETyp (TCon (TC (TCNum 0)) []))) (EVar (290,"hs"))) (ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 0)) []))) (ETyp (TCon (TC (TCNum 0)) []))))) (EApp (EApp (ETApp (ETApp (ETApp (EVar (40,"@")) (ETyp (TCon (TC (TCNum 8)) []))) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (ETyp (TCon (TC (TCNum 3)) []))) (EVar (286,"H"))) (ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 7)) []))) (ETyp (TCon (TC (TCNum 3)) [])))))]) [(Recursive [(Decl (288,"T1") (DExpr (EComp (EApp (EApp (ETApp (EVar (1,"+")) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (EApp (EApp (ETApp (EVar (1,"+")) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (EApp (EApp (ETApp (EVar (1,"+")) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (EApp (EApp (ETApp (EVar (1,"+")) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (EVar (298,"h"))) (EApp (EVar (245,"S1")) (EVar (299,"e"))))) (EApp (EApp (EApp (EVar (242,"Ch")) (EVar (299,"e"))) (EVar (300,"f"))) (EVar (301,"g"))))) (EVar (302,"k")))) (EVar (303,"w"))) [[(From (298,"h") (EVar (290,"hs")))],[(From (299,"e") (EVar (293,"es")))],[(From (300,"f") (EVar (292,"fs")))],[(From (301,"g") (EVar (291,"gs")))],[(From (302,"k") (EVar (248,"K")))],[(From (303,"w") (EVar (287,"W")))]]))),(Decl (289,"T2") (DExpr (EComp (EApp (EApp (ETApp (EVar (1,"+")) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (EApp (EVar (244,"S0")) (EVar (304,"a")))) (EApp (EApp (EApp (EVar (243,"Maj")) (EVar (304,"a"))) (EVar (305,"b"))) (EVar (306,"c")))) [[(From (304,"a") (EVar (297,"as")))],[(From (305,"b") (EVar (296,"bs")))],[(From (306,"c") (EVar (295,"cs")))]]))),(Decl (297,"as") (DExpr (EApp (ETApp (ETApp (ETApp (EVar (61,"take")) (ETyp (TCon (TC (TCNum 65)) []))) (ETyp (TCon (TC (TCNum 0)) []))) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (EApp (EApp (ETApp (ETApp (ETApp (EVar (34,"#")) (ETyp (TCon (TC (TCNum 1)) []))) (ETyp (TCon (TC (TCNum 64)) []))) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (EList [(EApp (EApp (ETApp (ETApp (ETApp (EVar (40,"@")) (ETyp (TCon (TC (TCNum 8)) []))) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (ETyp (TCon (TC (TCNum 0)) []))) (EVar (286,"H"))) (ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 0)) []))) (ETyp (TCon (TC (TCNum 0)) []))))])) (EComp (EApp (EApp (ETApp (EVar (1,"+")) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (EVar (309,"t1"))) (EVar (310,"t2"))) [[(From (309,"t1") (EVar (288,"T1")))],[(From (310,"t2") (EVar (289,"T2")))]]))))),(Decl (296,"bs") (DExpr (EApp (ETApp (ETApp (ETApp (EVar (61,"take")) (ETyp (TCon (TC (TCNum 65)) []))) (ETyp (TCon (TC (TCNum 1)) []))) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (EApp (EApp (ETApp (ETApp (ETApp (EVar (34,"#")) (ETyp (TCon (TC (TCNum 1)) []))) (ETyp (TCon (TC (TCNum 65)) []))) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (EList [(EApp (EApp (ETApp (ETApp (ETApp (EVar (40,"@")) (ETyp (TCon (TC (TCNum 8)) []))) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (ETyp (TCon (TC (TCNum 1)) []))) (EVar (286,"H"))) (ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 1)) []))) (ETyp (TCon (TC (TCNum 1)) []))))])) (EVar (297,"as")))))),(Decl (295,"cs") (DExpr (EApp (ETApp (ETApp (ETApp (EVar (61,"take")) (ETyp (TCon (TC (TCNum 65)) []))) (ETyp (TCon (TC (TCNum 1)) []))) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (EApp (EApp (ETApp (ETApp (ETApp (EVar (34,"#")) (ETyp (TCon (TC (TCNum 1)) []))) (ETyp (TCon (TC (TCNum 65)) []))) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (EList [(EApp (EApp (ETApp (ETApp (ETApp (EVar (40,"@")) (ETyp (TCon (TC (TCNum 8)) []))) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (ETyp (TCon (TC (TCNum 2)) []))) (EVar (286,"H"))) (ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 2)) []))) (ETyp (TCon (TC (TCNum 2)) []))))])) (EVar (296,"bs")))))),(Decl (294,"ds") (DExpr (EApp (ETApp (ETApp (ETApp (EVar (61,"take")) (ETyp (TCon (TC (TCNum 65)) []))) (ETyp (TCon (TC (TCNum 1)) []))) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (EApp (EApp (ETApp (ETApp (ETApp (EVar (34,"#")) (ETyp (TCon (TC (TCNum 1)) []))) (ETyp (TCon (TC (TCNum 65)) []))) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (EList [(EApp (EApp (ETApp (ETApp (ETApp (EVar (40,"@")) (ETyp (TCon (TC (TCNum 8)) []))) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (ETyp (TCon (TC (TCNum 2)) []))) (EVar (286,"H"))) (ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 3)) []))) (ETyp (TCon (TC (TCNum 2)) []))))])) (EVar (295,"cs")))))),(Decl (293,"es") (DExpr (EApp (ETApp (ETApp (ETApp (EVar (61,"take")) (ETyp (TCon (TC (TCNum 65)) []))) (ETyp (TCon (TC (TCNum 0)) []))) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (EApp (EApp (ETApp (ETApp (ETApp (EVar (34,"#")) (ETyp (TCon (TC (TCNum 1)) []))) (ETyp (TCon (TC (TCNum 64)) []))) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (EList [(EApp (EApp (ETApp (ETApp (ETApp (EVar (40,"@")) (ETyp (TCon (TC (TCNum 8)) []))) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (ETyp (TCon (TC (TCNum 3)) []))) (EVar (286,"H"))) (ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 4)) []))) (ETyp (TCon (TC (TCNum 3)) []))))])) (EComp (EApp (EApp (ETApp (EVar (1,"+")) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (EVar (307,"d"))) (EVar (308,"t1"))) [[(From (307,"d") (EVar (294,"ds")))],[(From (308,"t1") (EVar (288,"T1")))]]))))),(Decl (292,"fs") (DExpr (EApp (ETApp (ETApp (ETApp (EVar (61,"take")) (ETyp (TCon (TC (TCNum 65)) []))) (ETyp (TCon (TC (TCNum 1)) []))) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (EApp (EApp (ETApp (ETApp (ETApp (EVar (34,"#")) (ETyp (TCon (TC (TCNum 1)) []))) (ETyp (TCon (TC (TCNum 65)) []))) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (EList [(EApp (EApp (ETApp (ETApp (ETApp (EVar (40,"@")) (ETyp (TCon (TC (TCNum 8)) []))) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (ETyp (TCon (TC (TCNum 3)) []))) (EVar (286,"H"))) (ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 5)) []))) (ETyp (TCon (TC (TCNum 3)) []))))])) (EVar (293,"es")))))),(Decl (291,"gs") (DExpr (EApp (ETApp (ETApp (ETApp (EVar (61,"take")) (ETyp (TCon (TC (TCNum 65)) []))) (ETyp (TCon (TC (TCNum 1)) []))) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (EApp (EApp (ETApp (ETApp (ETApp (EVar (34,"#")) (ETyp (TCon (TC (TCNum 1)) []))) (ETyp (TCon (TC (TCNum 65)) []))) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (EList [(EApp (EApp (ETApp (ETApp (ETApp (EVar (40,"@")) (ETyp (TCon (TC (TCNum 8)) []))) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (ETyp (TCon (TC (TCNum 3)) []))) (EVar (286,"H"))) (ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 6)) []))) (ETyp (TCon (TC (TCNum 3)) []))))])) (EVar (292,"fs")))))),(Decl (290,"hs") (DExpr (EApp (ETApp (ETApp (ETApp (EVar (61,"take")) (ETyp (TCon (TC (TCNum 65)) []))) (ETyp (TCon (TC (TCNum 1)) []))) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (EApp (EApp (ETApp (ETApp (ETApp (EVar (34,"#")) (ETyp (TCon (TC (TCNum 1)) []))) (ETyp (TCon (TC (TCNum 65)) []))) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (EList [(EApp (EApp (ETApp (ETApp (ETApp (EVar (40,"@")) (ETyp (TCon (TC (TCNum 8)) []))) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]))) (ETyp (TCon (TC (TCNum 3)) []))) (EVar (286,"H"))) (ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 7)) []))) (ETyp (TCon (TC (TCNum 3)) []))))])) (EVar (291,"gs"))))))])])))))),(NonRecursive (Decl (253,"SHA256Block") (DExpr (EAbs (311,"H") (EAbs (312,"M") (EApp (EApp (EVar (252,"SHA256Compress")) (EVar (311,"H"))) (EApp (EVar (251,"SHA256MessageSchedule")) (EVar (312,"M"))))))))),(NonRecursive (Decl (254,"SHA256'") (DExpr (ETAbs (799,"a") (EAbs (314,"blocks") (EWhere (EApp (EApp (ETApp (ETApp (ETApp (EVar (42,"!")) (ETyp (TCon (TF TCAdd) [TCon (TC (TCNum 1)) [],TVar (TVBound 799 KNum)]))) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 8)) [],TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]]))) (ETyp (TCon (TC (TCNum 0)) []))) (EVar (315,"hash"))) (ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 0)) []))) (ETyp (TCon (TC (TCNum 0)) [])))) [(Recursive [(Decl (315,"hash") (DExpr (EApp (EApp (ETApp (ETApp (ETApp (EVar (34,"#")) (ETyp (TCon (TC (TCNum 1)) []))) (ETyp (TVar (TVBound 799 KNum)))) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 8)) [],TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]]))) (EList [(EVar (250,"H0"))])) (EComp (EApp (EApp (EVar (253,"SHA256Block")) (EVar (316,"h"))) (EVar (317,"b"))) [[(From (316,"h") (EVar (315,"hash")))],[(From (317,"b") (EVar (314,"blocks")))]]))))])])))))),(NonRecursive (Decl (255,"SHA256") (DExpr (ETAbs (823,"a") (EAbs (319,"msg") (EApp (ETApp (ETApp (ETApp (EVar (36,"join")) (ETyp (TCon (TC (TCNum 8)) []))) (ETyp (TCon (TC (TCNum 32)) []))) (ETyp (TCon (TC TCBit) []))) (EApp (ETApp (EVar (254,"SHA256'")) (ETyp (TCon (TF TCDiv) [TCon (TF TCAdd) [TCon (TC (TCNum 576)) [],TCon (TF TCMul) [TCon (TC (TCNum 8)) [],TVar (TVBound 823 KNum)]],TCon (TC (TCNum 512)) []]))) (EComp (EApp (ETApp (ETApp (ETApp (EVar (37,"split")) (ETyp (TCon (TC (TCNum 16)) []))) (ETyp (TCon (TC (TCNum 32)) []))) (ETyp (TCon (TC TCBit) []))) (EVar (320,"x"))) [[(From (320,"x") (EApp (ETApp (ETApp (ETApp (ETApp (EVar (249,"preprocess")) (ETyp (TCon (TF TCMul) [TCon (TC (TCNum 8)) [],TVar (TVBound 823 KNum)]))) (ETyp (TCon (TF TCAdd) [TCon (TC (TCNum 65)) [],TCon (TF TCMul) [TCon (TC (TCNum 8)) [],TVar (TVBound 823 KNum)]]))) (ETyp (TCon (TF TCDiv) [TCon (TF TCAdd) [TCon (TC (TCNum 576)) [],TCon (TF TCMul) [TCon (TC (TCNum 8)) [],TVar (TVBound 823 KNum)]],TCon (TC (TCNum 512)) []]))) (ETyp (TCon (TF TCMod) [TCon (TF TCSub) [TCon (TC (TCNum 512)) [],TCon (TF TCMod) [TCon (TF TCAdd) [TCon (TC (TCNum 65)) [],TCon (TF TCMul) [TCon (TC (TCNum 8)) [],TVar (TVBound 823 KNum)]],TCon (TC (TCNum 512)) []]],TCon (TC (TCNum 512)) []]))) (EApp (ETApp (ETApp (ETApp (EVar (36,"join")) (ETyp (TVar (TVBound 823 KNum)))) (ETyp (TCon (TC (TCNum 8)) []))) (ETyp (TCon (TC TCBit) []))) (EVar (319,"msg")))))]])))))))),(NonRecursive (Decl (257,"kats") (DExpr (EList [(ETuple [(EApp (ETApp (EVar (255,"SHA256")) (ETyp (TCon (TC (TCNum 56)) []))) (EList [(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 97)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 98)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 99)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 100)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 98)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 99)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 100)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 101)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 99)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 100)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 101)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 102)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 100)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 101)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 102)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 103)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 101)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 102)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 103)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 104)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 102)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 103)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 104)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 105)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 103)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 104)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 105)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 106)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 104)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 105)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 106)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 107)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 105)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 106)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 107)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 108)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 106)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 107)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 108)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 109)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 107)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 108)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 109)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 110)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 108)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 109)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 110)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 111)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 109)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 110)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 111)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 112)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 110)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 111)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 112)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 113)) []))) (ETyp (TCon (TC (TCNum 8)) [])))])),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 16533122207477069341668099752125637525043274373652441057433006174010909329089)) []))) (ETyp (TCon (TC (TCNum 256)) [])))]),(ETuple [(EApp (ETApp (EVar (255,"SHA256")) (ETyp (TCon (TC (TCNum 0)) []))) (EList [])),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 102987336249554097029535212322581322789799900648198034993379397001115665086549)) []))) (ETyp (TCon (TC (TCNum 256)) [])))]),(ETuple [(EApp (ETApp (EVar (255,"SHA256")) (ETyp (TCon (TC (TCNum 112)) []))) (EList [(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 97)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 98)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 99)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 100)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 101)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 102)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 103)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 104)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 98)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 99)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 100)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 101)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 102)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 103)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 104)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 105)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 99)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 100)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 101)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 102)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 103)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 104)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 105)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 106)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 100)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 101)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 102)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 103)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 104)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 105)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 106)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 107)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 101)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 102)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 103)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 104)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 105)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 106)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 107)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 108)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 102)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 103)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 104)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 105)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 106)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 107)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 108)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 109)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 103)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 104)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 105)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 106)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 107)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 108)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 109)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 110)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 104)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 105)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 106)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 107)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 108)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 109)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 110)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 111)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 105)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 106)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 107)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 108)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 109)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 110)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 111)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 112)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 106)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 107)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 108)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 109)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 110)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 111)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 112)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 113)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 107)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 108)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 109)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 110)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 111)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 112)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 113)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 114)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 108)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 109)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 110)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 111)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 112)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 113)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 114)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 115)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 109)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 110)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 111)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 112)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 113)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 114)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 115)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 116)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 110)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 111)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 112)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 113)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 114)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 115)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 116)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 117)) []))) (ETyp (TCon (TC (TCNum 8)) [])))])),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 93789699093071375310876825772826470999347754471583810071657638912869466565073)) []))) (ETyp (TCon (TC (TCNum 256)) [])))])])))),(NonRecursive (Decl (256,"katsPass") (DExpr (EApp (EApp (ETApp (EVar (17,"==")) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 3)) [],TCon (TC TCBit) []]))) (EApp (ETApp (EVar (12,"complement")) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 3)) [],TCon (TC TCBit) []]))) (ETApp (EVar (29,"zero")) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 3)) [],TCon (TC TCBit) []]))))) (EComp (EApp (EApp (ETApp (EVar (17,"==")) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 256)) [],TCon (TC TCBit) []]))) (EVar (322,"test"))) (EVar (323,"kat"))) [[(From (321,"__p0") (EVar (257,"kats"))),(MLet (Decl (322,"test") (DExpr (ESel (EVar (321,"__p0")) (TupleSel 0))))),(MLet (Decl (323,"kat") (DExpr (ESel (EVar (321,"__p0")) (TupleSel 1)))))]]))))),(NonRecursive (Decl (259,"SHA256Init") (DExpr (ERec [("h",(EVar (250,"H0"))),("block",(ETApp (EVar (29,"zero")) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 64)) [],TCon (TC TCSeq) [TCon (TC (TCNum 8)) [],TCon (TC TCBit) []]])))),("n",(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 0)) []))) (ETyp (TCon (TC (TCNum 16)) [])))),("sz",(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 0)) []))) (ETyp (TCon (TC (TCNum 64)) []))))])))),(NonRecursive (Decl (262,"update") (DExpr (ETAbs (895,"a") (ETAbs (896,"b") (ETAbs (897,"c") (EAbs (335,"a") (EAbs (336,"i") (EAbs (337,"x") (EComp (EIf (EApp (EApp (ETApp (EVar (17,"==")) (ETyp (TCon (TC TCSeq) [TVar (TVBound 897 KNum),TCon (TC TCBit) []]))) (EVar (339,"j"))) (EVar (336,"i"))) (EVar (337,"x")) (EVar (338,"e"))) [[(From (338,"e") (EVar (335,"a")))],[(From (339,"j") (ETApp (ETApp (ETApp (EVar (49,"fromTo")) (ETyp (TCon (TC (TCNum 0)) []))) (ETyp (TCon (TF TCSub) [TCon (TF TCExp) [TCon (TC (TCNum 2)) [],TVar (TVBound 897 KNum)],TCon (TC (TCNum 1)) []]))) (ETyp (TVar (TVBound 897 KNum)))))]])))))))))),(NonRecursive (Decl (260,"SHA256Update1") (DExpr (EAbs (324,"s") (EAbs (325,"b") (EIf (EApp (EApp (ETApp (EVar (17,"==")) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 16)) [],TCon (TC TCBit) []]))) (ESel (EVar (324,"s")) (RecordSel "n"))) (ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 64)) []))) (ETyp (TCon (TC (TCNum 16)) [])))) (ERec [("h",(EApp (EApp (EVar (253,"SHA256Block")) (ESel (EVar (324,"s")) (RecordSel "h"))) (EApp (ETApp (ETApp (ETApp (EVar (37,"split")) (ETyp (TCon (TC (TCNum 16)) []))) (ETyp (TCon (TC (TCNum 32)) []))) (ETyp (TCon (TC TCBit) []))) (EApp (ETApp (ETApp (ETApp (EVar (36,"join")) (ETyp (TCon (TC (TCNum 64)) []))) (ETyp (TCon (TC (TCNum 8)) []))) (ETyp (TCon (TC TCBit) []))) (ESel (EVar (324,"s")) (RecordSel "block")))))),("block",(EApp (EApp (ETApp (ETApp (ETApp (EVar (34,"#")) (ETyp (TCon (TC (TCNum 1)) []))) (ETyp (TCon (TC (TCNum 63)) []))) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 8)) [],TCon (TC TCBit) []]))) (EList [(EVar (325,"b"))])) (ETApp (EVar (29,"zero")) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 63)) [],TCon (TC TCSeq) [TCon (TC (TCNum 8)) [],TCon (TC TCBit) []]]))))),("n",(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 1)) []))) (ETyp (TCon (TC (TCNum 16)) [])))),("sz",(EApp (EApp (ETApp (EVar (1,"+")) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 64)) [],TCon (TC TCBit) []]))) (ESel (EVar (324,"s")) (RecordSel "sz"))) (ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 8)) []))) (ETyp (TCon (TC (TCNum 64)) [])))))]) (ERec [("h",(ESel (EVar (324,"s")) (RecordSel "h"))),("block",(EApp (EApp (EApp (ETApp (ETApp (ETApp (EVar (262,"update")) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 8)) [],TCon (TC TCBit) []]))) (ETyp (TCon (TC (TCNum 64)) []))) (ETyp (TCon (TC (TCNum 16)) []))) (ESel (EVar (324,"s")) (RecordSel "block"))) (ESel (EVar (324,"s")) (RecordSel "n"))) (EVar (325,"b")))),("n",(EApp (EApp (ETApp (EVar (1,"+")) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 16)) [],TCon (TC TCBit) []]))) (ESel (EVar (324,"s")) (RecordSel "n"))) (ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 1)) []))) (ETyp (TCon (TC (TCNum 16)) []))))),("sz",(EApp (EApp (ETApp (EVar (1,"+")) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 64)) [],TCon (TC TCBit) []]))) (ESel (EVar (324,"s")) (RecordSel "sz"))) (ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 8)) []))) (ETyp (TCon (TC (TCNum 64)) [])))))]))))))),(NonRecursive (Decl (261,"SHA256Update") (DExpr (ETAbs (962,"n") (EAbs (327,"sinit") (EAbs (328,"bs") (EWhere (EApp (EApp (ETApp (ETApp (ETApp (EVar (42,"!")) (ETyp (TCon (TF TCAdd) [TCon (TC (TCNum 1)) [],TVar (TVBound 962 KNum)]))) (ETyp (TUser (258,"SHA256State") [] (TRec [("h",(TCon (TC TCSeq) [TCon (TC (TCNum 8)) [],TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]])),("block",(TCon (TC TCSeq) [TCon (TC (TCNum 64)) [],TCon (TC TCSeq) [TCon (TC (TCNum 8)) [],TCon (TC TCBit) []]])),("n",(TCon (TC TCSeq) [TCon (TC (TCNum 16)) [],TCon (TC TCBit) []])),("sz",(TCon (TC TCSeq) [TCon (TC (TCNum 64)) [],TCon (TC TCBit) []]))])))) (ETyp (TCon (TC (TCNum 0)) []))) (EVar (329,"ss"))) (ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 0)) []))) (ETyp (TCon (TC (TCNum 0)) [])))) [(Recursive [(Decl (329,"ss") (DExpr (EApp (EApp (ETApp (ETApp (ETApp (EVar (34,"#")) (ETyp (TCon (TC (TCNum 1)) []))) (ETyp (TVar (TVBound 962 KNum)))) (ETyp (TUser (258,"SHA256State") [] (TRec [("h",(TCon (TC TCSeq) [TCon (TC (TCNum 8)) [],TCon (TC TCSeq) [TCon (TC (TCNum 32)) [],TCon (TC TCBit) []]])),("block",(TCon (TC TCSeq) [TCon (TC (TCNum 64)) [],TCon (TC TCSeq) [TCon (TC (TCNum 8)) [],TCon (TC TCBit) []]])),("n",(TCon (TC TCSeq) [TCon (TC (TCNum 16)) [],TCon (TC TCBit) []])),("sz",(TCon (TC TCSeq) [TCon (TC (TCNum 64)) [],TCon (TC TCBit) []]))])))) (EList [(EVar (327,"sinit"))])) (EComp (EApp (EApp (EVar (260,"SHA256Update1")) (EVar (330,"s"))) (EVar (331,"b"))) [[(From (330,"s") (EVar (329,"ss")))],[(From (331,"b") (EVar (328,"bs")))]]))))])]))))))),(NonRecursive (Decl (263,"SHA256Final") (DExpr (EAbs (340,"s") (EWhere (EApp (ETApp (ETApp (ETApp (EVar (36,"join")) (ETyp (TCon (TC (TCNum 8)) []))) (ETyp (TCon (TC (TCNum 32)) []))) (ETyp (TCon (TC TCBit) []))) (EApp (EApp (EVar (253,"SHA256Block")) (EVar (343,"h"))) (EVar (345,"b'")))) [(NonRecursive (Decl (341,"s'") (DExpr (EApp (EApp (EVar (260,"SHA256Update1")) (EVar (340,"s"))) (ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 128)) []))) (ETyp (TCon (TC (TCNum 8)) []))))))),(NonRecursive (Decl (342,"__p1") (DExpr (EIf (EApp (EApp (ETApp (EVar (15,"<=")) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 16)) [],TCon (TC TCBit) []]))) (ESel (EVar (341,"s'")) (RecordSel "n"))) (ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 56)) []))) (ETyp (TCon (TC (TCNum 16)) [])))) (ETuple [(ESel (EVar (341,"s'")) (RecordSel "h")),(ESel (EVar (341,"s'")) (RecordSel "block"))]) (ETuple [(EApp (EApp (EVar (253,"SHA256Block")) (ESel (EVar (341,"s'")) (RecordSel "h"))) (EApp (ETApp (ETApp (ETApp (EVar (37,"split")) (ETyp (TCon (TC (TCNum 16)) []))) (ETyp (TCon (TC (TCNum 32)) []))) (ETyp (TCon (TC TCBit) []))) (EApp (ETApp (ETApp (ETApp (EVar (36,"join")) (ETyp (TCon (TC (TCNum 64)) []))) (ETyp (TCon (TC (TCNum 8)) []))) (ETyp (TCon (TC TCBit) []))) (ESel (EVar (341,"s'")) (RecordSel "block"))))),(ETApp (EVar (29,"zero")) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 64)) [],TCon (TC TCSeq) [TCon (TC (TCNum 8)) [],TCon (TC TCBit) []]])))]))))),(NonRecursive (Decl (343,"h") (DExpr (ESel (EVar (342,"__p1")) (TupleSel 0))))),(NonRecursive (Decl (344,"b") (DExpr (ESel (EVar (342,"__p1")) (TupleSel 1))))),(NonRecursive (Decl (345,"b'") (DExpr (EApp (ETApp (ETApp (ETApp (EVar (37,"split")) (ETyp (TCon (TC (TCNum 16)) []))) (ETyp (TCon (TC (TCNum 32)) []))) (ETyp (TCon (TC TCBit) []))) (EApp (EApp (ETApp (EVar (27,"||")) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 512)) [],TCon (TC TCBit) []]))) (EApp (ETApp (ETApp (ETApp (EVar (36,"join")) (ETyp (TCon (TC (TCNum 64)) []))) (ETyp (TCon (TC (TCNum 8)) []))) (ETyp (TCon (TC TCBit) []))) (EVar (344,"b")))) (EApp (EApp (ETApp (ETApp (ETApp (EVar (34,"#")) (ETyp (TCon (TC (TCNum 448)) []))) (ETyp (TCon (TC (TCNum 64)) []))) (ETyp (TCon (TC TCBit) []))) (ETApp (EVar (29,"zero")) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 448)) [],TCon (TC TCBit) []])))) (ESel (EVar (340,"s")) (RecordSel "sz"))))))))]))))),(NonRecursive (Decl (264,"SHA256Imp") (DExpr (ETAbs (1047,"a") (EAbs (347,"msg") (EApp (EVar (263,"SHA256Final")) (EApp (EApp (ETApp (EVar (261,"SHA256Update")) (ETyp (TVar (TVBound 1047 KNum)))) (EVar (259,"SHA256Init"))) (EVar (347,"msg"))))))))),(NonRecursive (Decl (266,"katsImp") (DExpr (EList [(ETuple [(EApp (ETApp (EVar (264,"SHA256Imp")) (ETyp (TCon (TC (TCNum 56)) []))) (EList [(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 97)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 98)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 99)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 100)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 98)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 99)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 100)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 101)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 99)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 100)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 101)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 102)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 100)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 101)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 102)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 103)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 101)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 102)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 103)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 104)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 102)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 103)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 104)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 105)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 103)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 104)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 105)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 106)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 104)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 105)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 106)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 107)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 105)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 106)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 107)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 108)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 106)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 107)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 108)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 109)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 107)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 108)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 109)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 110)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 108)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 109)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 110)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 111)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 109)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 110)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 111)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 112)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 110)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 111)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 112)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 113)) []))) (ETyp (TCon (TC (TCNum 8)) [])))])),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 16533122207477069341668099752125637525043274373652441057433006174010909329089)) []))) (ETyp (TCon (TC (TCNum 256)) [])))]),(ETuple [(EApp (ETApp (EVar (264,"SHA256Imp")) (ETyp (TCon (TC (TCNum 0)) []))) (EList [])),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 102987336249554097029535212322581322789799900648198034993379397001115665086549)) []))) (ETyp (TCon (TC (TCNum 256)) [])))]),(ETuple [(EApp (ETApp (EVar (264,"SHA256Imp")) (ETyp (TCon (TC (TCNum 112)) []))) (EList [(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 97)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 98)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 99)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 100)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 101)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 102)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 103)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 104)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 98)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 99)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 100)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 101)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 102)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 103)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 104)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 105)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 99)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 100)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 101)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 102)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 103)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 104)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 105)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 106)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 100)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 101)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 102)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 103)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 104)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 105)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 106)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 107)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 101)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 102)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 103)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 104)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 105)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 106)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 107)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 108)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 102)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 103)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 104)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 105)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 106)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 107)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 108)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 109)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 103)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 104)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 105)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 106)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 107)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 108)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 109)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 110)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 104)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 105)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 106)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 107)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 108)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 109)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 110)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 111)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 105)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 106)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 107)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 108)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 109)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 110)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 111)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 112)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 106)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 107)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 108)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 109)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 110)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 111)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 112)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 113)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 107)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 108)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 109)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 110)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 111)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 112)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 113)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 114)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 108)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 109)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 110)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 111)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 112)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 113)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 114)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 115)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 109)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 110)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 111)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 112)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 113)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 114)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 115)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 116)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 110)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 111)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 112)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 113)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 114)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 115)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 116)) []))) (ETyp (TCon (TC (TCNum 8)) []))),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 117)) []))) (ETyp (TCon (TC (TCNum 8)) [])))])),(ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 93789699093071375310876825772826470999347754471583810071657638912869466565073)) []))) (ETyp (TCon (TC (TCNum 256)) [])))])])))),(NonRecursive (Decl (265,"katsPassImp") (DExpr (EApp (EApp (ETApp (EVar (17,"==")) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 3)) [],TCon (TC TCBit) []]))) (EApp (ETApp (EVar (12,"complement")) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 3)) [],TCon (TC TCBit) []]))) (ETApp (EVar (29,"zero")) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 3)) [],TCon (TC TCBit) []]))))) (EComp (EApp (EApp (ETApp (EVar (17,"==")) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 256)) [],TCon (TC TCBit) []]))) (EVar (349,"test"))) (EVar (350,"kat"))) [[(From (348,"__p2") (EVar (266,"katsImp"))),(MLet (Decl (349,"test") (DExpr (ESel (EVar (348,"__p2")) (TupleSel 0))))),(MLet (Decl (350,"kat") (DExpr (ESel (EVar (348,"__p2")) (TupleSel 1)))))]]))))),(NonRecursive (Decl (267,"imp_correct") (DExpr (ETAbs (1105,"") (EAbs (351,"msg") (EApp (EApp (ETApp (EVar (17,"==")) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 256)) [],TCon (TC TCBit) []]))) (EApp (ETApp (EVar (255,"SHA256")) (ETyp (TVar (TVBound 1105 KNum)))) (EVar (351,"msg")))) (EApp (ETApp (EVar (264,"SHA256Imp")) (ETyp (TVar (TVBound 1105 KNum)))) (EVar (351,"msg"))))))))),(NonRecursive (Decl (353,"kinit") (DExpr (ETAbs (1108,"pwBytes") (ETAbs (1109,"blockLength") (ETAbs (1110,"digest") (EAbs (360,"hash") (EAbs (361,"key") (EIf (EApp (EApp (ETApp (EVar (14,">")) (ETyp (TCon (TC TCSeq) [TCon (TF TCMax) [TCon (TF TCWidth) [TVar (TVBound 1108 KNum)],TCon (TF TCWidth) [TVar (TVBound 1109 KNum)]],TCon (TC TCBit) []]))) (ETApp (ETApp (EVar (0,"demote")) (ETyp (TVar (TVBound 1108 KNum)))) (ETyp (TCon (TF TCMax) [TCon (TF TCWidth) [TVar (TVBound 1108 KNum)],TCon (TF TCWidth) [TVar (TVBound 1109 KNum)]])))) (ETApp (ETApp (EVar (0,"demote")) (ETyp (TVar (TVBound 1109 KNum)))) (ETyp (TCon (TF TCMax) [TCon (TF TCWidth) [TVar (TVBound 1108 KNum)],TCon (TF TCWidth) [TVar (TVBound 1109 KNum)]])))) (EApp (ETApp (ETApp (ETApp (EVar (61,"take")) (ETyp (TVar (TVBound 1109 KNum)))) (ETyp (TVar (TVBound 1110 KNum)))) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 8)) [],TCon (TC TCBit) []]))) (EApp (EApp (ETApp (ETApp (ETApp (EVar (34,"#")) (ETyp (TVar (TVBound 1110 KNum)))) (ETyp (TVar (TVBound 1109 KNum)))) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 8)) [],TCon (TC TCBit) []]))) (EApp (ETApp (ETApp (ETApp (EVar (37,"split")) (ETyp (TVar (TVBound 1110 KNum)))) (ETyp (TCon (TC (TCNum 8)) []))) (ETyp (TCon (TC TCBit) []))) (EApp (EVar (360,"hash")) (EVar (361,"key"))))) (ETApp (EVar (29,"zero")) (ETyp (TCon (TC TCSeq) [TVar (TVBound 1109 KNum),TCon (TC TCSeq) [TCon (TC (TCNum 8)) [],TCon (TC TCBit) []]]))))) (EApp (ETApp (ETApp (ETApp (EVar (61,"take")) (ETyp (TVar (TVBound 1109 KNum)))) (ETyp (TVar (TVBound 1108 KNum)))) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 8)) [],TCon (TC TCBit) []]))) (EApp (EApp (ETApp (ETApp (ETApp (EVar (34,"#")) (ETyp (TVar (TVBound 1108 KNum)))) (ETyp (TVar (TVBound 1109 KNum)))) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 8)) [],TCon (TC TCBit) []]))) (EVar (361,"key"))) (ETApp (EVar (29,"zero")) (ETyp (TCon (TC TCSeq) [TVar (TVBound 1109 KNum),TCon (TC TCSeq) [TCon (TC (TCNum 8)) [],TCon (TC TCBit) []]])))))))))))))),(NonRecursive (Decl (354,"hmac") (DExpr (ETAbs (1141,"msgBytes") (ETAbs (1142,"pwBytes") (ETAbs (1143,"digest") (ETAbs (1144,"blockLength") (EAbs (366,"hash") (EAbs (367,"hash2") (EAbs (368,"hash3") (EAbs (369,"key") (EAbs (370,"message") (EWhere (EApp (EVar (367,"hash2")) (EApp (EApp (ETApp (ETApp (ETApp (EVar (34,"#")) (ETyp (TVar (TVBound 1144 KNum)))) (ETyp (TVar (TVBound 1143 KNum)))) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 8)) [],TCon (TC TCBit) []]))) (EVar (372,"okey"))) (EVar (374,"internal")))) [(NonRecursive (Decl (371,"ks") (DExpr (EApp (EApp (ETApp (ETApp (ETApp (EVar (353,"kinit")) (ETyp (TVar (TVBound 1142 KNum)))) (ETyp (TVar (TVBound 1144 KNum)))) (ETyp (TVar (TVBound 1143 KNum)))) (EVar (368,"hash3"))) (EVar (369,"key")))))),(NonRecursive (Decl (372,"okey") (DExpr (EComp (EApp (EApp (ETApp (EVar (28,"^")) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 8)) [],TCon (TC TCBit) []]))) (EVar (375,"k"))) (ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 92)) []))) (ETyp (TCon (TC (TCNum 8)) [])))) [[(From (375,"k") (EVar (371,"ks")))]])))),(NonRecursive (Decl (373,"ikey") (DExpr (EComp (EApp (EApp (ETApp (EVar (28,"^")) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 8)) [],TCon (TC TCBit) []]))) (EVar (376,"k"))) (ETApp (ETApp (EVar (0,"demote")) (ETyp (TCon (TC (TCNum 54)) []))) (ETyp (TCon (TC (TCNum 8)) [])))) [[(From (376,"k") (EVar (371,"ks")))]])))),(NonRecursive (Decl (374,"internal") (DExpr (EApp (ETApp (ETApp (ETApp (EVar (37,"split")) (ETyp (TVar (TVBound 1143 KNum)))) (ETyp (TCon (TC (TCNum 8)) []))) (ETyp (TCon (TC TCBit) []))) (EApp (EVar (366,"hash")) (EApp (EApp (ETApp (ETApp (ETApp (EVar (34,"#")) (ETyp (TVar (TVBound 1144 KNum)))) (ETyp (TVar (TVBound 1141 KNum)))) (ETyp (TCon (TC TCSeq) [TCon (TC (TCNum 8)) [],TCon (TC TCBit) []]))) (EVar (373,"ikey"))) (EVar (370,"message"))))))))]))))))))))))),(NonRecursive (Decl (352,"hmacSHA256") (DExpr (ETAbs (1188,"pwBytes") (ETAbs (1189,"msgBytes") (EApp (EApp (EApp (ETApp (ETApp (ETApp (ETApp (EVar (354,"hmac")) (ETyp (TVar (TVBound 1189 KNum)))) (ETyp (TVar (TVBound 1188 KNum)))) (ETyp (TCon (TC (TCNum 32)) []))) (ETyp (TCon (TC (TCNum 64)) []))) (ETApp (EVar (255,"SHA256")) (ETyp (TCon (TF TCAdd) [TCon (TC (TCNum 64)) [],TVar (TVBound 1189 KNum)])))) (ETApp (EVar (255,"SHA256")) (ETyp (TCon (TC (TCNum 96)) [])))) (ETApp (EVar (255,"SHA256")) (ETyp (TVar (TVBound 1188 KNum))))))))))].

Definition ge := bind_decl_groups whole_prog gempty.

Definition hmacSHA256 : ident := (352,"hmacSHA256").

Definition hmac : ident := (354,"hmac").
Definition kinit : ident := (353,"kinit").

